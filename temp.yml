---
- name: FortiGate Post-Check Firewall Rule Configuration
  hosts: "{{ firewall_name }}"
  gather_facts: no
  connection: httpapi
  collections:
    - fortinet.fortios
  any_errors_fatal: true

  vars:
    rule_id: "{{ rule_id }}"
    source_ip: "{{ source_ip }}"
    destination_ip: "{{ destination_ip }}"
    protocol: "{{ protocol }}"
    dest_port: "{{ dest_port }}"

    src_addr_name: "h-{{ source_ip }}"
    dst_addr_name: "h-{{ destination_ip }}"
    fortigate_service_name: "{{ (protocol | upper) ~ '-' ~ (dest_port | replace('-', '_')) if protocol | lower not in ['any', 'icmp'] else ('ALL_ICMP' if protocol | lower == 'icmp' else 'ALL') | trim }}"

  tasks:
    - name: Debug FortiGate Post-Check variables
      debug:
        msg: "Post-checking Rule ID: {{ rule_id }} on {{ inventory_hostname }} (FortiGate) for Source: {{ source_ip }}, Dest: {{ destination_ip }}, Proto: {{ protocol }}, Port: {{ dest_port }}"

    - name: Get FortiGate Firewall Policy info by ID
      fortinet.fortios.fortios_firewall_policy_info:
        vdom: "root"
        policyid: "{{ rule_id }}"
      register: policy_info

    - name: Verify that the policy exists
      ansible.builtin.fail:
        msg: "FortiGate policy with ID {{ rule_id }} not found on {{ inventory_hostname }}!"
      when: not policy_info.meta.results or policy_info.meta.results | length == 0

    - name: Check if policy parameters match expected values
      ansible.builtin.fail:
        msg: "FortiGate policy parameters mismatch for ID {{ rule_id }}!"
      when: not (
        (policy_info.meta.results[0].name == 'firework-{{ rule_id }}') and
        (policy_info.meta.results[0].srcaddr | map(attribute='name') | list | contains(src_addr_name)) and
        (policy_info.meta.results[0].dstaddr | map(attribute='name') | list | contains(dst_addr_name)) and
        (policy_info.meta.results[0].service | map(attribute='name') | list | contains(fortigate_service_name))
      )

    - name: Indicate that the policy was successfully verified
      ansible.builtin.debug:
        msg: "POLICY_VERIFIED"
      when: not ansible_failed_result is defined
