---
- name: FortiGate Provision Firewall Rule
  hosts: "{{ firewall_name }}" # Target a single firewall
  gather_facts: no
  connection: httpapi # Use httpapi for FortiGate
  collections:
    - fortinet.fortios
  any_errors_fatal: true # IMPORTANT: This will cause the playbook to fail immediately if any task fails.

  vars:
    rule_id: "{{ rule_id }}"
    source_ip: "{{ source_ip }}"
    destination_ip: "{{ destination_ip }}"
    protocol: "{{ protocol }}"
    dest_port: "{{ dest_port }}"
    rule_description: "{{ rule_description }}"

    # Define object names based on rule parameters for consistency
    src_addr_name: "h-{{ source_ip }}"
    dst_addr_name: "h-{{ destination_ip }}"
    fortigate_service_name: "{{ (protocol | upper) ~ '-' ~ (dest_port | replace('-', '_')) if protocol | lower not in ['any', 'icmp'] else ('ALL_ICMP' if protocol | lower == 'icmp' else 'ALL') | trim }}"

  tasks:
    - name: Debug FortiGate Provisioning variables
      debug:
        msg: "Provisioning Rule ID: {{ rule_id }} on {{ inventory_hostname }} (FortiGate) for Source: {{ source_ip }}, Destination: {{ destination_ip }}, Protocol: {{ protocol }}, Port: {{ dest_port }}"

    - name: Create FortiGate Source Address Object
      fortinet.fortios.fortios_firewall_address:
          vdom: "root"
          state: "present"
          access_token: "{{ fortinet_api_access_token }}"
          firewall_address:
              name: "{{ src_addr_name }}"
              subnet: "{{ source_ip }}/32" # Assuming /32 for host
              type: "ipmask"

    - name: Create FortiGate Destination Address Object
      fortinet.fortios.fortios_firewall_address:
          vdom: "root"
          state: "present"
          access_token: "{{ fortinet_api_access_token }}"
          firewall_address:
              name: "{{ dst_addr_name }}"
              subnet: "{{ destination_ip }}/32" # Assuming /32 for host
              type: "ipmask"

    - name: Create FortiGate Service Object (TCP)
      when:
          - protocol | lower == 'tcp'
      fortinet.fortios.fortios_firewall_service_custom:
          vdom: "root"
          state: "present"
          access_token: "{{ fortinet_api_access_token }}"
          firewall_service_custom:
               name: "{{ fortigate_service_name }}"
               protocol: "TCP/UDP/SCTP"
               tcp_portrange: "{{ dest_port }}"

    - name: Create FortiGate Service Object (UDP)
      when:
          - protocol | lower == 'udp'
      fortinet.fortios.fortios_firewall_service_custom:
          vdom: "root"
          state: "present"
          access_token: "{{ fortinet_api_access_token }}"
          firewall_service_custom:
               name: "{{ fortigate_service_name }}"
               protocol: "TCP/UDP/SCTP"
               udp_portrange: "{{ dest_port }}"

    - name: Create FortiGate Firewall Policy
      fortinet.fortios.fortios_firewall_policy:
          vdom: "root"
          state: "present"
          access_token: "{{ fortinet_api_access_token }}"
          firewall_policy:
              name: "firework-{{ rule_id }}"
              policyid: "{{ rule_id }}"
              srcintf:
                  - name: "any"
              dstintf:
                  - name: "any"
              srcaddr:
                  - name: "{{ src_addr_name }}"
              dstaddr:
                  - name: "{{ dst_addr_name }}"
              service:
                  - name: "{{ fortigate_service_name }}"
              action: "accept"
              schedule: "always"
              logtraffic: "all"
              comments: "firework-{{ rule_id }}"
