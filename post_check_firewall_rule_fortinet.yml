---
- name: FortiGate Post-Check Firewall Rule Configuration
  hosts: "{{ firewall_name }}"
  gather_facts: no
  connection: httpapi
  collections:
    - fortinet.fortios
  any_errors_fatal: true

  vars:
    rule_id: "{{ rule_id }}"
    source_ip: "{{ source_ip }}"
    destination_ip: "{{ destination_ip }}"
    protocol: "{{ protocol }}"
    dest_port: "{{ dest_port }}"

    src_addr_name: "h-{{ source_ip }}"
    dst_addr_name: "h-{{ destination_ip }}"
    fortigate_service_name: "{{ (protocol | upper) ~ '-' ~ (dest_port | replace('-', '_')) if protocol | lower not in ['any', 'icmp'] else ('ALL_ICMP' if protocol | lower == 'icmp' else 'ALL') | trim }}"

  tasks:
    - name: Debug Post-Check variables
      debug:
        msg: "Post-checking Rule ID: {{ rule_id }} on {{ inventory_hostname }} (FortiGate) for Source: {{ source_ip }}, Dest: {{ destination_ip }}, Proto: {{ protocol }}, Port: {{ dest_port }}"

    - name: Verify that the policy exists and has correct parameters (check mode)
      fortinet.fortios.fortios_firewall_policy:
        vdom: "root"
        state: present
        access_token: "{{ fortinet_api_key }}"
        firewall_policy:
          policyid: "{{ rule_id }}"
          name: "firework-{{ rule_id }}"
          srcintf:
            - name: "any"
          dstintf:
            - name: "any"
          srcaddr:
            - name: "{{ src_addr_name }}"
          dstaddr:
            - name: "{{ dst_addr_name }}"
          service:
            - name: "{{ fortigate_service_name }}"
          action: "accept"
          schedule: "always"
      check_mode: yes
      register: policy_check

    - name: Fail if policy does not exist or differs
      ansible.builtin.fail:
        msg: "FortiGate policy with ID {{ rule_id }} was not found or parameters do not match!"
      when: policy_check.changed == true

    - name: Indicate that the policy was successfully verified
      debug:
        msg: "POLICY_VERIFIED"
